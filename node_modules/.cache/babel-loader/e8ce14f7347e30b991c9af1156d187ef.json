{"ast":null,"code":"var _jsxFileName = \"/home/donut/Projects/project2/werds-client/src/components/Scores.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { db } from '../firebase';\nimport { collection, getDocs } from 'firebase/firestore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Scores() {\n  _s();\n\n  const [scores, setScores] = useState([]);\n  const scoresCollectionRef = collection(db, \"scores\");\n  useEffect(() => {\n    // promise; async\n    const getScores = async () => {\n      const response = await getDocs(scoresCollectionRef);\n      setScores(response.docs.map(doc => ({ ...doc.data()\n      })));\n    };\n\n    getScores();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      children: /*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Scores, \"Yyk7VGwHemHEYHhwndV2GCDMHOA=\");\n\n_c = Scores;\n\nvar _c;\n\n$RefreshReg$(_c, \"Scores\");","map":{"version":3,"names":["React","useState","useEffect","db","collection","getDocs","Scores","scores","setScores","scoresCollectionRef","getScores","response","docs","map","doc","data"],"sources":["/home/donut/Projects/project2/werds-client/src/components/Scores.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { db } from '../firebase'\nimport { collection, getDocs } from 'firebase/firestore'\n\nexport default function Scores() {\n\tconst [scores, setScores] = useState([])\n\tconst scoresCollectionRef = collection(db, \"scores\")\n\n\tuseEffect(() => {\n\t\t// promise; async\n\n\t\tconst getScores = async () => {\n\t\t\tconst response = await getDocs(scoresCollectionRef);\n\t\t\tsetScores(response.docs.map((doc) => ({...doc.data()})))\n\t\t};\n\n\t\tgetScores()\n\t}, [])\n\t\n\treturn (\n\t\t<div>\n\t\t\t<Table>\n\t\t\t\t<thead>\n\t\t\t\t\t<tr></tr>\n\t\t\t\t</thead>\n\t\t\t</Table>\n\t\t</div>\n\t)\n}"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,EAAT,QAAmB,aAAnB;AACA,SAASC,UAAT,EAAqBC,OAArB,QAAoC,oBAApC;;AAEA,eAAe,SAASC,MAAT,GAAkB;EAAA;;EAChC,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,EAAD,CAApC;EACA,MAAMQ,mBAAmB,GAAGL,UAAU,CAACD,EAAD,EAAK,QAAL,CAAtC;EAEAD,SAAS,CAAC,MAAM;IACf;IAEA,MAAMQ,SAAS,GAAG,YAAY;MAC7B,MAAMC,QAAQ,GAAG,MAAMN,OAAO,CAACI,mBAAD,CAA9B;MACAD,SAAS,CAACG,QAAQ,CAACC,IAAT,CAAcC,GAAd,CAAmBC,GAAD,KAAU,EAAC,GAAGA,GAAG,CAACC,IAAJ;MAAJ,CAAV,CAAlB,CAAD,CAAT;IACA,CAHD;;IAKAL,SAAS;EACT,CATQ,EASN,EATM,CAAT;EAWA,oBACC;IAAA,uBACC,QAAC,KAAD;MAAA,uBACC;QAAA,uBACC;UAAA;UAAA;UAAA;QAAA;MADD;QAAA;QAAA;QAAA;MAAA;IADD;MAAA;MAAA;MAAA;IAAA;EADD;IAAA;IAAA;IAAA;EAAA,QADD;AASA;;GAxBuBJ,M;;KAAAA,M"},"metadata":{},"sourceType":"module"}